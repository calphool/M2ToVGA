--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=24 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_bua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[23..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[23..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode351w[2..0]	: WIRE;
	w_anode364w[3..0]	: WIRE;
	w_anode381w[3..0]	: WIRE;
	w_anode391w[3..0]	: WIRE;
	w_anode401w[3..0]	: WIRE;
	w_anode411w[3..0]	: WIRE;
	w_anode421w[3..0]	: WIRE;
	w_anode431w[3..0]	: WIRE;
	w_anode441w[3..0]	: WIRE;
	w_anode453w[2..0]	: WIRE;
	w_anode462w[3..0]	: WIRE;
	w_anode473w[3..0]	: WIRE;
	w_anode483w[3..0]	: WIRE;
	w_anode493w[3..0]	: WIRE;
	w_anode503w[3..0]	: WIRE;
	w_anode513w[3..0]	: WIRE;
	w_anode523w[3..0]	: WIRE;
	w_anode533w[3..0]	: WIRE;
	w_anode544w[2..0]	: WIRE;
	w_anode553w[3..0]	: WIRE;
	w_anode564w[3..0]	: WIRE;
	w_anode574w[3..0]	: WIRE;
	w_anode584w[3..0]	: WIRE;
	w_anode594w[3..0]	: WIRE;
	w_anode604w[3..0]	: WIRE;
	w_anode614w[3..0]	: WIRE;
	w_anode624w[3..0]	: WIRE;
	w_anode635w[2..0]	: WIRE;
	w_anode644w[3..0]	: WIRE;
	w_anode655w[3..0]	: WIRE;
	w_anode665w[3..0]	: WIRE;
	w_anode675w[3..0]	: WIRE;
	w_anode685w[3..0]	: WIRE;
	w_anode695w[3..0]	: WIRE;
	w_anode705w[3..0]	: WIRE;
	w_anode715w[3..0]	: WIRE;
	w_data349w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[23..0] = eq_wire[23..0];
	eq_wire[] = ( ( w_anode715w[3..3], w_anode705w[3..3], w_anode695w[3..3], w_anode685w[3..3], w_anode675w[3..3], w_anode665w[3..3], w_anode655w[3..3], w_anode644w[3..3]), ( w_anode624w[3..3], w_anode614w[3..3], w_anode604w[3..3], w_anode594w[3..3], w_anode584w[3..3], w_anode574w[3..3], w_anode564w[3..3], w_anode553w[3..3]), ( w_anode533w[3..3], w_anode523w[3..3], w_anode513w[3..3], w_anode503w[3..3], w_anode493w[3..3], w_anode483w[3..3], w_anode473w[3..3], w_anode462w[3..3]), ( w_anode441w[3..3], w_anode431w[3..3], w_anode421w[3..3], w_anode411w[3..3], w_anode401w[3..3], w_anode391w[3..3], w_anode381w[3..3], w_anode364w[3..3]));
	w_anode351w[] = ( (w_anode351w[1..1] & (! data_wire[4..4])), (w_anode351w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode364w[] = ( (w_anode364w[2..2] & (! w_data349w[2..2])), (w_anode364w[1..1] & (! w_data349w[1..1])), (w_anode364w[0..0] & (! w_data349w[0..0])), w_anode351w[2..2]);
	w_anode381w[] = ( (w_anode381w[2..2] & (! w_data349w[2..2])), (w_anode381w[1..1] & (! w_data349w[1..1])), (w_anode381w[0..0] & w_data349w[0..0]), w_anode351w[2..2]);
	w_anode391w[] = ( (w_anode391w[2..2] & (! w_data349w[2..2])), (w_anode391w[1..1] & w_data349w[1..1]), (w_anode391w[0..0] & (! w_data349w[0..0])), w_anode351w[2..2]);
	w_anode401w[] = ( (w_anode401w[2..2] & (! w_data349w[2..2])), (w_anode401w[1..1] & w_data349w[1..1]), (w_anode401w[0..0] & w_data349w[0..0]), w_anode351w[2..2]);
	w_anode411w[] = ( (w_anode411w[2..2] & w_data349w[2..2]), (w_anode411w[1..1] & (! w_data349w[1..1])), (w_anode411w[0..0] & (! w_data349w[0..0])), w_anode351w[2..2]);
	w_anode421w[] = ( (w_anode421w[2..2] & w_data349w[2..2]), (w_anode421w[1..1] & (! w_data349w[1..1])), (w_anode421w[0..0] & w_data349w[0..0]), w_anode351w[2..2]);
	w_anode431w[] = ( (w_anode431w[2..2] & w_data349w[2..2]), (w_anode431w[1..1] & w_data349w[1..1]), (w_anode431w[0..0] & (! w_data349w[0..0])), w_anode351w[2..2]);
	w_anode441w[] = ( (w_anode441w[2..2] & w_data349w[2..2]), (w_anode441w[1..1] & w_data349w[1..1]), (w_anode441w[0..0] & w_data349w[0..0]), w_anode351w[2..2]);
	w_anode453w[] = ( (w_anode453w[1..1] & (! data_wire[4..4])), (w_anode453w[0..0] & data_wire[3..3]), enable_wire);
	w_anode462w[] = ( (w_anode462w[2..2] & (! w_data349w[2..2])), (w_anode462w[1..1] & (! w_data349w[1..1])), (w_anode462w[0..0] & (! w_data349w[0..0])), w_anode453w[2..2]);
	w_anode473w[] = ( (w_anode473w[2..2] & (! w_data349w[2..2])), (w_anode473w[1..1] & (! w_data349w[1..1])), (w_anode473w[0..0] & w_data349w[0..0]), w_anode453w[2..2]);
	w_anode483w[] = ( (w_anode483w[2..2] & (! w_data349w[2..2])), (w_anode483w[1..1] & w_data349w[1..1]), (w_anode483w[0..0] & (! w_data349w[0..0])), w_anode453w[2..2]);
	w_anode493w[] = ( (w_anode493w[2..2] & (! w_data349w[2..2])), (w_anode493w[1..1] & w_data349w[1..1]), (w_anode493w[0..0] & w_data349w[0..0]), w_anode453w[2..2]);
	w_anode503w[] = ( (w_anode503w[2..2] & w_data349w[2..2]), (w_anode503w[1..1] & (! w_data349w[1..1])), (w_anode503w[0..0] & (! w_data349w[0..0])), w_anode453w[2..2]);
	w_anode513w[] = ( (w_anode513w[2..2] & w_data349w[2..2]), (w_anode513w[1..1] & (! w_data349w[1..1])), (w_anode513w[0..0] & w_data349w[0..0]), w_anode453w[2..2]);
	w_anode523w[] = ( (w_anode523w[2..2] & w_data349w[2..2]), (w_anode523w[1..1] & w_data349w[1..1]), (w_anode523w[0..0] & (! w_data349w[0..0])), w_anode453w[2..2]);
	w_anode533w[] = ( (w_anode533w[2..2] & w_data349w[2..2]), (w_anode533w[1..1] & w_data349w[1..1]), (w_anode533w[0..0] & w_data349w[0..0]), w_anode453w[2..2]);
	w_anode544w[] = ( (w_anode544w[1..1] & data_wire[4..4]), (w_anode544w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode553w[] = ( (w_anode553w[2..2] & (! w_data349w[2..2])), (w_anode553w[1..1] & (! w_data349w[1..1])), (w_anode553w[0..0] & (! w_data349w[0..0])), w_anode544w[2..2]);
	w_anode564w[] = ( (w_anode564w[2..2] & (! w_data349w[2..2])), (w_anode564w[1..1] & (! w_data349w[1..1])), (w_anode564w[0..0] & w_data349w[0..0]), w_anode544w[2..2]);
	w_anode574w[] = ( (w_anode574w[2..2] & (! w_data349w[2..2])), (w_anode574w[1..1] & w_data349w[1..1]), (w_anode574w[0..0] & (! w_data349w[0..0])), w_anode544w[2..2]);
	w_anode584w[] = ( (w_anode584w[2..2] & (! w_data349w[2..2])), (w_anode584w[1..1] & w_data349w[1..1]), (w_anode584w[0..0] & w_data349w[0..0]), w_anode544w[2..2]);
	w_anode594w[] = ( (w_anode594w[2..2] & w_data349w[2..2]), (w_anode594w[1..1] & (! w_data349w[1..1])), (w_anode594w[0..0] & (! w_data349w[0..0])), w_anode544w[2..2]);
	w_anode604w[] = ( (w_anode604w[2..2] & w_data349w[2..2]), (w_anode604w[1..1] & (! w_data349w[1..1])), (w_anode604w[0..0] & w_data349w[0..0]), w_anode544w[2..2]);
	w_anode614w[] = ( (w_anode614w[2..2] & w_data349w[2..2]), (w_anode614w[1..1] & w_data349w[1..1]), (w_anode614w[0..0] & (! w_data349w[0..0])), w_anode544w[2..2]);
	w_anode624w[] = ( (w_anode624w[2..2] & w_data349w[2..2]), (w_anode624w[1..1] & w_data349w[1..1]), (w_anode624w[0..0] & w_data349w[0..0]), w_anode544w[2..2]);
	w_anode635w[] = ( (w_anode635w[1..1] & data_wire[4..4]), (w_anode635w[0..0] & data_wire[3..3]), enable_wire);
	w_anode644w[] = ( (w_anode644w[2..2] & (! w_data349w[2..2])), (w_anode644w[1..1] & (! w_data349w[1..1])), (w_anode644w[0..0] & (! w_data349w[0..0])), w_anode635w[2..2]);
	w_anode655w[] = ( (w_anode655w[2..2] & (! w_data349w[2..2])), (w_anode655w[1..1] & (! w_data349w[1..1])), (w_anode655w[0..0] & w_data349w[0..0]), w_anode635w[2..2]);
	w_anode665w[] = ( (w_anode665w[2..2] & (! w_data349w[2..2])), (w_anode665w[1..1] & w_data349w[1..1]), (w_anode665w[0..0] & (! w_data349w[0..0])), w_anode635w[2..2]);
	w_anode675w[] = ( (w_anode675w[2..2] & (! w_data349w[2..2])), (w_anode675w[1..1] & w_data349w[1..1]), (w_anode675w[0..0] & w_data349w[0..0]), w_anode635w[2..2]);
	w_anode685w[] = ( (w_anode685w[2..2] & w_data349w[2..2]), (w_anode685w[1..1] & (! w_data349w[1..1])), (w_anode685w[0..0] & (! w_data349w[0..0])), w_anode635w[2..2]);
	w_anode695w[] = ( (w_anode695w[2..2] & w_data349w[2..2]), (w_anode695w[1..1] & (! w_data349w[1..1])), (w_anode695w[0..0] & w_data349w[0..0]), w_anode635w[2..2]);
	w_anode705w[] = ( (w_anode705w[2..2] & w_data349w[2..2]), (w_anode705w[1..1] & w_data349w[1..1]), (w_anode705w[0..0] & (! w_data349w[0..0])), w_anode635w[2..2]);
	w_anode715w[] = ( (w_anode715w[2..2] & w_data349w[2..2]), (w_anode715w[1..1] & w_data349w[1..1]), (w_anode715w[0..0] & w_data349w[0..0]), w_anode635w[2..2]);
	w_data349w[2..0] = data_wire[2..0];
END;
--VALID FILE
