--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=24 LPM_WIDTH=5 data eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:06:05:12:04:51:SJ cbx_lpm_add_sub 2020:06:05:12:04:51:SJ cbx_lpm_compare 2020:06:05:12:04:51:SJ cbx_lpm_decode 2020:06:05:12:04:51:SJ cbx_mgl 2020:06:05:12:11:10:SJ cbx_nadder 2020:06:05:12:04:51:SJ cbx_stratix 2020:06:05:12:04:51:SJ cbx_stratixii 2020:06:05:12:04:51:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_4aa
( 
	data[4..0]	:	input;
	eq[23..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[23..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1005w[3..0]	: WIRE;
	w_anode1016w[2..0]	: WIRE;
	w_anode1026w[3..0]	: WIRE;
	w_anode1037w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode729w[2..0]	: WIRE;
	w_anode743w[3..0]	: WIRE;
	w_anode760w[3..0]	: WIRE;
	w_anode770w[3..0]	: WIRE;
	w_anode780w[3..0]	: WIRE;
	w_anode790w[3..0]	: WIRE;
	w_anode800w[3..0]	: WIRE;
	w_anode810w[3..0]	: WIRE;
	w_anode820w[3..0]	: WIRE;
	w_anode832w[2..0]	: WIRE;
	w_anode842w[3..0]	: WIRE;
	w_anode853w[3..0]	: WIRE;
	w_anode863w[3..0]	: WIRE;
	w_anode873w[3..0]	: WIRE;
	w_anode883w[3..0]	: WIRE;
	w_anode893w[3..0]	: WIRE;
	w_anode903w[3..0]	: WIRE;
	w_anode913w[3..0]	: WIRE;
	w_anode924w[2..0]	: WIRE;
	w_anode934w[3..0]	: WIRE;
	w_anode945w[3..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode965w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode995w[3..0]	: WIRE;
	w_data727w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[23..0] = eq_wire[23..0];
	eq_wire[] = ( ( w_anode1097w[3..3], w_anode1087w[3..3], w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1047w[3..3], w_anode1037w[3..3], w_anode1026w[3..3]), ( w_anode1005w[3..3], w_anode995w[3..3], w_anode985w[3..3], w_anode975w[3..3], w_anode965w[3..3], w_anode955w[3..3], w_anode945w[3..3], w_anode934w[3..3]), ( w_anode913w[3..3], w_anode903w[3..3], w_anode893w[3..3], w_anode883w[3..3], w_anode873w[3..3], w_anode863w[3..3], w_anode853w[3..3], w_anode842w[3..3]), ( w_anode820w[3..3], w_anode810w[3..3], w_anode800w[3..3], w_anode790w[3..3], w_anode780w[3..3], w_anode770w[3..3], w_anode760w[3..3], w_anode743w[3..3]));
	w_anode1005w[] = ( (w_anode1005w[2..2] & w_data727w[2..2]), (w_anode1005w[1..1] & w_data727w[1..1]), (w_anode1005w[0..0] & w_data727w[0..0]), w_anode924w[2..2]);
	w_anode1016w[] = ( (w_anode1016w[1..1] & data_wire[4..4]), (w_anode1016w[0..0] & data_wire[3..3]), B"1");
	w_anode1026w[] = ( (w_anode1026w[2..2] & (! w_data727w[2..2])), (w_anode1026w[1..1] & (! w_data727w[1..1])), (w_anode1026w[0..0] & (! w_data727w[0..0])), w_anode1016w[2..2]);
	w_anode1037w[] = ( (w_anode1037w[2..2] & (! w_data727w[2..2])), (w_anode1037w[1..1] & (! w_data727w[1..1])), (w_anode1037w[0..0] & w_data727w[0..0]), w_anode1016w[2..2]);
	w_anode1047w[] = ( (w_anode1047w[2..2] & (! w_data727w[2..2])), (w_anode1047w[1..1] & w_data727w[1..1]), (w_anode1047w[0..0] & (! w_data727w[0..0])), w_anode1016w[2..2]);
	w_anode1057w[] = ( (w_anode1057w[2..2] & (! w_data727w[2..2])), (w_anode1057w[1..1] & w_data727w[1..1]), (w_anode1057w[0..0] & w_data727w[0..0]), w_anode1016w[2..2]);
	w_anode1067w[] = ( (w_anode1067w[2..2] & w_data727w[2..2]), (w_anode1067w[1..1] & (! w_data727w[1..1])), (w_anode1067w[0..0] & (! w_data727w[0..0])), w_anode1016w[2..2]);
	w_anode1077w[] = ( (w_anode1077w[2..2] & w_data727w[2..2]), (w_anode1077w[1..1] & (! w_data727w[1..1])), (w_anode1077w[0..0] & w_data727w[0..0]), w_anode1016w[2..2]);
	w_anode1087w[] = ( (w_anode1087w[2..2] & w_data727w[2..2]), (w_anode1087w[1..1] & w_data727w[1..1]), (w_anode1087w[0..0] & (! w_data727w[0..0])), w_anode1016w[2..2]);
	w_anode1097w[] = ( (w_anode1097w[2..2] & w_data727w[2..2]), (w_anode1097w[1..1] & w_data727w[1..1]), (w_anode1097w[0..0] & w_data727w[0..0]), w_anode1016w[2..2]);
	w_anode729w[] = ( (w_anode729w[1..1] & (! data_wire[4..4])), (w_anode729w[0..0] & (! data_wire[3..3])), B"1");
	w_anode743w[] = ( (w_anode743w[2..2] & (! w_data727w[2..2])), (w_anode743w[1..1] & (! w_data727w[1..1])), (w_anode743w[0..0] & (! w_data727w[0..0])), w_anode729w[2..2]);
	w_anode760w[] = ( (w_anode760w[2..2] & (! w_data727w[2..2])), (w_anode760w[1..1] & (! w_data727w[1..1])), (w_anode760w[0..0] & w_data727w[0..0]), w_anode729w[2..2]);
	w_anode770w[] = ( (w_anode770w[2..2] & (! w_data727w[2..2])), (w_anode770w[1..1] & w_data727w[1..1]), (w_anode770w[0..0] & (! w_data727w[0..0])), w_anode729w[2..2]);
	w_anode780w[] = ( (w_anode780w[2..2] & (! w_data727w[2..2])), (w_anode780w[1..1] & w_data727w[1..1]), (w_anode780w[0..0] & w_data727w[0..0]), w_anode729w[2..2]);
	w_anode790w[] = ( (w_anode790w[2..2] & w_data727w[2..2]), (w_anode790w[1..1] & (! w_data727w[1..1])), (w_anode790w[0..0] & (! w_data727w[0..0])), w_anode729w[2..2]);
	w_anode800w[] = ( (w_anode800w[2..2] & w_data727w[2..2]), (w_anode800w[1..1] & (! w_data727w[1..1])), (w_anode800w[0..0] & w_data727w[0..0]), w_anode729w[2..2]);
	w_anode810w[] = ( (w_anode810w[2..2] & w_data727w[2..2]), (w_anode810w[1..1] & w_data727w[1..1]), (w_anode810w[0..0] & (! w_data727w[0..0])), w_anode729w[2..2]);
	w_anode820w[] = ( (w_anode820w[2..2] & w_data727w[2..2]), (w_anode820w[1..1] & w_data727w[1..1]), (w_anode820w[0..0] & w_data727w[0..0]), w_anode729w[2..2]);
	w_anode832w[] = ( (w_anode832w[1..1] & (! data_wire[4..4])), (w_anode832w[0..0] & data_wire[3..3]), B"1");
	w_anode842w[] = ( (w_anode842w[2..2] & (! w_data727w[2..2])), (w_anode842w[1..1] & (! w_data727w[1..1])), (w_anode842w[0..0] & (! w_data727w[0..0])), w_anode832w[2..2]);
	w_anode853w[] = ( (w_anode853w[2..2] & (! w_data727w[2..2])), (w_anode853w[1..1] & (! w_data727w[1..1])), (w_anode853w[0..0] & w_data727w[0..0]), w_anode832w[2..2]);
	w_anode863w[] = ( (w_anode863w[2..2] & (! w_data727w[2..2])), (w_anode863w[1..1] & w_data727w[1..1]), (w_anode863w[0..0] & (! w_data727w[0..0])), w_anode832w[2..2]);
	w_anode873w[] = ( (w_anode873w[2..2] & (! w_data727w[2..2])), (w_anode873w[1..1] & w_data727w[1..1]), (w_anode873w[0..0] & w_data727w[0..0]), w_anode832w[2..2]);
	w_anode883w[] = ( (w_anode883w[2..2] & w_data727w[2..2]), (w_anode883w[1..1] & (! w_data727w[1..1])), (w_anode883w[0..0] & (! w_data727w[0..0])), w_anode832w[2..2]);
	w_anode893w[] = ( (w_anode893w[2..2] & w_data727w[2..2]), (w_anode893w[1..1] & (! w_data727w[1..1])), (w_anode893w[0..0] & w_data727w[0..0]), w_anode832w[2..2]);
	w_anode903w[] = ( (w_anode903w[2..2] & w_data727w[2..2]), (w_anode903w[1..1] & w_data727w[1..1]), (w_anode903w[0..0] & (! w_data727w[0..0])), w_anode832w[2..2]);
	w_anode913w[] = ( (w_anode913w[2..2] & w_data727w[2..2]), (w_anode913w[1..1] & w_data727w[1..1]), (w_anode913w[0..0] & w_data727w[0..0]), w_anode832w[2..2]);
	w_anode924w[] = ( (w_anode924w[1..1] & data_wire[4..4]), (w_anode924w[0..0] & (! data_wire[3..3])), B"1");
	w_anode934w[] = ( (w_anode934w[2..2] & (! w_data727w[2..2])), (w_anode934w[1..1] & (! w_data727w[1..1])), (w_anode934w[0..0] & (! w_data727w[0..0])), w_anode924w[2..2]);
	w_anode945w[] = ( (w_anode945w[2..2] & (! w_data727w[2..2])), (w_anode945w[1..1] & (! w_data727w[1..1])), (w_anode945w[0..0] & w_data727w[0..0]), w_anode924w[2..2]);
	w_anode955w[] = ( (w_anode955w[2..2] & (! w_data727w[2..2])), (w_anode955w[1..1] & w_data727w[1..1]), (w_anode955w[0..0] & (! w_data727w[0..0])), w_anode924w[2..2]);
	w_anode965w[] = ( (w_anode965w[2..2] & (! w_data727w[2..2])), (w_anode965w[1..1] & w_data727w[1..1]), (w_anode965w[0..0] & w_data727w[0..0]), w_anode924w[2..2]);
	w_anode975w[] = ( (w_anode975w[2..2] & w_data727w[2..2]), (w_anode975w[1..1] & (! w_data727w[1..1])), (w_anode975w[0..0] & (! w_data727w[0..0])), w_anode924w[2..2]);
	w_anode985w[] = ( (w_anode985w[2..2] & w_data727w[2..2]), (w_anode985w[1..1] & (! w_data727w[1..1])), (w_anode985w[0..0] & w_data727w[0..0]), w_anode924w[2..2]);
	w_anode995w[] = ( (w_anode995w[2..2] & w_data727w[2..2]), (w_anode995w[1..1] & w_data727w[1..1]), (w_anode995w[0..0] & (! w_data727w[0..0])), w_anode924w[2..2]);
	w_data727w[2..0] = data_wire[2..0];
END;
--VALID FILE
